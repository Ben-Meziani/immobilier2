{{ form_start(form) }}
<div class="row">
  <div class="col-md-8">
    <div class="row">
      <div class="col-md-4">{{ form_row(form.title) }}</div>
      <div class="col-md-4">{{ form_row(form.surface) }}</div>
      <div class="col-md-4">{{ form_row(form.price) }}</div>
    </div>
  </div>
  <div class="col-md-4">
    <div class="row flex justify-content-start flex-wrap">
      {% for picture in property.pictures %}
        <div class="col" style="width: 100px; flex: none; margin: 5px;">
          <img src="{{ vich_uploader_asset(picture, 'imageFile') }}" width="100" alt="">
          <a href="{{ path('admin.picture.delete', {id: picture.id}) }}" class="btn btn-danger" data-delete data-token="{{ csrf_token('delete' ~ picture.id) }}">Supprimer</a>
        </div>
      {% endfor %}
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-2">{{ form_row(form.rooms) }}</div>
  <div class="col-md-2">{{ form_row(form.bedrooms) }}</div>
  <div class="col-md-2">{{ form_row(form.heat) }}</div>
  <div class="col-md-2">{{ form_row(form.floor) }}</div>
</div>
<div class="row">
  <div class="col-md-10">{{ form_row(form.pictureFiles) }}</div>
  <div class="col-md-2">{{ form_row(form.sold) }}</div>

  <div class="col-md-9">{{ form_row(form.address) }}</div>
  <div class="col-md-2">{{ form_row(form.city) }}</div>
  <div class="col-md-1">{{ form_row(form.postal_code) }}</div>



<!--  RECHERCHE SUR MINI MAP SELON ALGOLIA  : https://community.algolia.com/places/examples.html#displaying-on-a-map -->

  <div id="map-example-container"></div>
  <input type="search" id="input-map" class="form-control" placeholder="Where are we going?" />
  <style>
    #map-example-container {height: 300px; width: 500px; margin-top: 2rem;};
  </style>
  <script src="https://cdn.jsdelivr.net/leaflet/1/leaflet.js"></script>

<script src="https://cdn.jsdelivr.net/npm/places.js@1.19.0"></script>

<script>
(function() {
  var placesAutocomplete = places({
    appId: 'pl78R985QT1Y',
    apiKey: '0dff740c1b94d2403d8b835b349cf90b',
    container: document.querySelector('#input-map')
  });
 
  var map = L.map('map-example-container', {
    scrollWheelZoom: false,
    zoomControl: false
  });

  var osmLayer = new L.TileLayer(
    'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      minZoom: 1,
      maxZoom: 13,
      attribution: 'Map data Â© <a href="https://openstreetmap.org">OpenStreetMap</a> contributors'
    }
  );

  var markers = [];

  map.setView(new L.LatLng(0, 0), 1);
  map.addLayer(osmLayer);

  placesAutocomplete.on('suggestions', handleOnSuggestions);
  placesAutocomplete.on('cursorchanged', handleOnCursorchanged);
  placesAutocomplete.on('change', handleOnChange);
  placesAutocomplete.on('clear', handleOnClear);

  function handleOnSuggestions(e) {
    markers.forEach(removeMarker);
    markers = [];

    if (e.suggestions.length === 0) {
      map.setView(new L.LatLng(0, 0), 1);
      return;
    }

    e.suggestions.forEach(addMarker);
    findBestZoom();
  }

  function handleOnChange(e) {
    markers
      .forEach(function(marker, markerIndex) {
        if (markerIndex === e.suggestionIndex) {
          markers = [marker];
          marker.setOpacity(1);
          findBestZoom();
        } else {
          removeMarker(marker);
        }
      });
  }

  function handleOnClear() {
    map.setView(new L.LatLng(0, 0), 1);
    markers.forEach(removeMarker);
  }

  function handleOnCursorchanged(e) {
    markers
      .forEach(function(marker, markerIndex) {
        if (markerIndex === e.suggestionIndex) {
          marker.setOpacity(1);
          marker.setZIndexOffset(1000);
        } else {
          marker.setZIndexOffset(0);
          marker.setOpacity(0.5);
        }
      });
  }

  function addMarker(suggestion) {
    var marker = L.marker(suggestion.latlng, {opacity: .4});
    marker.addTo(map);
    markers.push(marker);
  }

  function removeMarker(marker) {
    map.removeLayer(marker);
  }

  function findBestZoom() {
    var featureGroup = L.featureGroup(markers);
    map.fitBounds(featureGroup.getBounds().pad(0.5), {animate: false});
  }
})();
</script>


<!-- FIN PLUGIN ALGOLIA -->


</div>
{{ form_rest(form) }}
<button class="btn btn-primary">{{ button|default('Enregistrer') }}</button>
{{ form_end(form) }}
